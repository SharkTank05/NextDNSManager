name: Deploy to release pipeline

on:
  workflow_dispatch:

jobs:
  deploy-to-github:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: gradle

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Retrieve version code for release
        id: android_code
        run: |
          echo "::set-output name=VERSION_CODE::$(./gradlew -q printVersionCode)"

      - name: Set version code environment variable
        run: |
          echo "VERSION_CODE=${{ steps.android_code.outputs.VERSION_CODE }}" >> $GITHUB_ENV

      - name: Get changelog content from fastlane
        id: read_file
        run: |
          file_content=$(cat whatsnew/whatsnew-en-US)
          echo "::set-output name=file_content::$file_content"
        shell: bash

      - name: Set changelog environment variable
        run: echo "CHANGELOG=${{ steps.read_file.outputs.file_content }}" >> $GITHUB_ENV

      - name: Create changelog for fastlane
        run: |
          cd fastlane/metadata/android/en-US/changelogs
          echo "$CHANGELOG" > ${{ env.VERSION_CODE }}.txt

      - name: Commit changelog for fastlane
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "GitHub Actions"
          git add fastlane/metadata/android/en-US/changelogs/${{ env.VERSION_CODE }}.txt
          git commit -m "Add changelog for release ${{ env.VERSION_CODE }}"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push

      - name: Create release APK
        run: ./gradlew assembleRelease

      - name: Sign release APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/release/app-release-unsigned-signed.apk

      - name: Retrieve version name for release
        id: android_version
        run: |
          echo "::set-output name=VERSION_NAME::$(./gradlew -q printVersionName)"

      - name: Set version name environment variable
        run: |
          echo "VERSION_NAME=${{ steps.android_version.outputs.VERSION_NAME }}" >> $GITHUB_ENV

      - name: Download release APK
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: apk/

      - name: Upload APK for Github release
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-release-unsigned-signed.apk
          asset_name: app-release.apk
          asset_content_type: application/zip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}

  deploy-to-google-play:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: gradle

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create release bundle
        run: ./gradlew bundleRelease

      - name: Sign Google Play release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create service_account.json for Google Play release
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy bundle to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.doubleangels.nextdnsmanagement
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: production
          whatsNewDirectory: whatsnew
